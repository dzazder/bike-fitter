@page "/brakes/add"
@using BikeFitter.Api.Models
@using BikeFitter.Web.Routing
@using BikeFitter.Web.Services
@inject RequestService RequestService
@inject Routes Routes
@inject NavigationManager NavManager

<h3>Add a brake</h3>

<EditForm Model="@brake" OnValidSubmit="@HandleValidSubmit">
    <div class="mb-3">
        <label>
            Brake name
            <InputText class="form-control" @bind-Value="brake.Name"></InputText>
        </label>
    </div>
    <div class="mb-3">
        <label>
            Brake price
            <InputNumber class="form-control" @bind-Value="brake.Price"></InputNumber>
        </label>
    </div>
    <div class="mb-3">
        <label>
            Uri
            <InputText class="form-control" @bind-Value="brake.Uri"></InputText>
        </label>
    </div>
    <div class="alert alert-danger" role="alert" hidden="@HideErrorMessage">
        Brakes added failed :(
    </div>
    <button type="submit" class="btn btn-primary">Add a brake</button>
    <a class="btn btn-light" href="/brakes">Back</a>

</EditForm>

@code {
    private Brake brake = new Brake();
    private bool HideErrorMessage { get; set; } = true;

    private async void HandleValidSubmit(EditContext editContext)
    {
        var response = await RequestService.PostJson<Brake>(HttpMethod.Post, Routes.Brakes, (Brake)editContext.Model);

        if (!response.IsSuccessStatusCode)
        {
            ShowErrorMessage();
        }
        else
        {
            NavManager.NavigateTo("/brakes");
        }
    }

    private void ShowErrorMessage()
    {
        HideErrorMessage = false;
    }
}
